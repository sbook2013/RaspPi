#!/usr/local/bin/python2.7
import time; # includes time module    
import math; # includes math module

#use main() to turn the lights on and off in the function determined
def main():
  
  #initialize all variables
  morpheus = [[[False for i in range(8)] for j in range(8)] for k in range(8)] #LED storage
  initTime=time.time() #initial system time
  totalTicksToRun = 2 #how long to run in seconds
  ticks = time.time() #initialize ticks before call
  dutyLength = 0.01 #setting the time to flash for error and brightness
  
  
  while totalTicksToRun + initTime > ticks:
    ticks = time.time()
    checkerLights(ticks, initTime, morpheus)
  
  #checkerLights makes morpheus [][][] the values for each time
  #checkerboard pattern
def checkerLights(fticks,finitTime, tempArr):
  for q in range(8):
    for w in range(8):
      for e in range(8):
        #checks for if z variable is under the curve
        #TODO check for correct values when connected to LED
        if e < math.cos((q/3.5)*3.14)*math.sin((w/3.5)*3.14)/2: 
          #sets values but moves x variable at speed of 1 rev/second
          tempArr[int((q+fticks)%8)][w][e] = True 
        else:
          tempArr[int((q+fticks)%8)][w][e] = False


if __name__ == '__main__':
  main()


#TODO 3d matrix to output matrix function
#TODO error(lighting discrepancies) checker (could return 1,2,3...)
#TODO brightness
#TODO other display functions
